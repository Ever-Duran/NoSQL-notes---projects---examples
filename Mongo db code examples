
#This code is an example for a practice

test> use tienda
switched to db tienda
tienda> db.productos.insertOne({producto:"libro1",precio:9.99})
{
  acknowledged: true,
  insertedId: ObjectId('67491fce26998bf6350d8190')
}
tienda> db.productos.find()
[
  {
    _id: ObjectId('67491fce26998bf6350d8190'),
    producto: 'libro1',
    precio: 9.99
  }
]
tienda> db.productos.find().pretty()
[
  {
    _id: ObjectId('67491fce26998bf6350d8190'),
    producto: 'libro1',
    precio: 9.99
  }
]
tienda> db.productos.insertOne({producto:"libro2",precio:12.99,descripcion:"Un muy buen libro"})
{
  acknowledged: true,
  insertedId: ObjectId('6749207a26998bf6350d8191')
}
tienda> db.productos.find().pretty()
[
  {
    _id: ObjectId('67491fce26998bf6350d8190'),
    producto: 'libro1',
    precio: 9.99
  },
  {
    _id: ObjectId('6749207a26998bf6350d8191'),
    producto: 'libro2',
    precio: 12.99,
    descripcion: 'Un muy buen libro'
  }
]
tienda> db.productos.insertOne({producto:"libro2",precio:12.99,descripcion:"Un muy buen libro",detalles:{tapa:"dura",paginas:300}})
{
  acknowledged: true,
  insertedId: ObjectId('6749214126998bf6350d8192')
}
tienda> db.productos.find().pretty()
[
  {
    _id: ObjectId('67491fce26998bf6350d8190'),
    producto: 'libro1',
    precio: 9.99
  },
  {
    _id: ObjectId('6749207a26998bf6350d8191'),
    producto: 'libro2',
    precio: 12.99,
    descripcion: 'Un muy buen libro'
  },
  {
    _id: ObjectId('6749214126998bf6350d8192'),
    producto: 'libro2',
    precio: 12.99,
    descripcion: 'Un muy buen libro',
    detalles: { tapa: 'dura', paginas: 300 }
tienda>
]
tienda>


//*******//
//More codes from class//
//show a DB
use market
show dbs

//create//
db.createCollection("clients")

//delete a db//
use example
db.dropDatabase()

cls (clean)

show collection //shows collections

//******
//it creates a collection and inserts a document
//if the collection doesn't exist, it is automatically created
db.productos.insert(
{ nombre: "escoba",
}
)

//to look for more than one results
db.productos.find(
{descripción: "circular", nombre: "galletas",}
)

//*************
//This one shows the first element that meets the condition
db.productos.findOne(
{descripción: "circular"}
)

//Shows the first element that
//(we put 1 as a binary value for True but 0 is False)
db.productos.findOne({descripción: "circular"}, {nombre: 1, descripción: 1, _id : 0})

//example with find
db.productos.find({descripción: "circular"}, {nombre: 1, precio: 1, _id: 0})

//************





